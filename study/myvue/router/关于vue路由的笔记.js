// vue  本身就是一个mvc
// 后台的mvc   m(数据)           v(html视图)      c(php快递员)
// nodejs就是让前后台分离->分工明确->维护成本降低
// nodejs   m(数据)   c(nodejs)   v(ejs)
// mvc前端框架的架构
// angular    vue   react
// h5   css3 的移动端适配

// （多页面服务器->响应->新的页面）
//1.接收用户的请求，2.分析用户的请求3.根据请求要获取相应的资源php4.对资源进行解析5.解析完成以后返回服务器
//6.返回客户端
// 前台的路由：确定  请求和组件的关系，并且实现单页面的应用
//1.接收用户的请求2.分析用户的请求3.找到用户数据4.返回客户端


// vue-router 是为了实现单页面应用   vue是用mvc进行组件化开发，而组件之间的切换用vue-router
// 闭包有什么优劣势？ 跨域 jsonp（通过script标签对实现）（通过代理实现跨域）  vuex js内存泄漏  ajax
// h5与css3是什么



// 混合型app应用
// b/s架构    基于浏览器的应用
// ->c/s架构

// 页面不跳转，出现页面标识
// 我写的html+css+js是放在原生的那个组件里   webview
// // vue-router路由  :::   vue按照自己的需求找到想要用的内容（组件）



// 单页面应用：：：只需要向服务器发起一次请求
//

// 如何使用router
// 1.引入vue-router.js
// 2指定视图出现的位置  router-view
// 3.指定跳转地址   <a href="#/for"></a>       <router-link></router-link>
// 4.配置路由  new Vue
// 设置路由   new VueRouter{(各种配置)}
// 6.一一对应的关系，请求路径-->组件
// 7.组件



// vue不用操作 dom元素   双向数据绑定组件化，降低服务器的压力，